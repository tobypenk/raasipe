"french"="europe",
"indian"="indian",
"mexican"="americas",
"english"="europe",
"italian"="europe",
"filipino"="east_asia",
"german"="europe",
"greek"="europe",
"african"="africa",
"vietnamese"="east_asia",
"japanese"="east_asia",
"russian"="europe",
"serbian"="europe",
"portugal"="europe",
"sa"="americas",
"chinese"="east_asia",
"korean"="east_asia",
"polish"="europe"
)
names(cuisines_map)
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(i.singular_name,'%20',' '),'%27','') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin <> 'ancient';"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
table(df$cuisine)
cuisines_map <- c(
"spanish"="europe",
"american"="americas",
"me"="west_asia",
"ancient"="ancient",
"french"="europe",
"indian"="west_asia",
"mexican"="americas",
"english"="europe",
"italian"="europe",
"filipino"="east_asia",
"german"="europe",
"greek"="europe",
"african"="africa",
"vietnamese"="east_asia",
"japanese"="east_asia",
"russian"="europe",
"serbian"="europe",
"portugal"="europe",
"sa"="americas",
"chinese"="east_asia",
"korean"="east_asia",
"polish"="europe"
)
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(i.singular_name,'%20',' '),'%27','') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin not in ('ancient');"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
write.csv(df[2:nrow(df),],"cuisines.csv",row.names = FALSE)
table(df[2:nrow(df),"cuisine"])
cuisines_map <- c(
"spanish"="europe",
"american"="americas",
"me"="westasia",
"ancient"="ancient",
"french"="europe",
"indian"="westasia",
"mexican"="americas",
"english"="europe",
"italian"="europe",
"filipino"="eastasia",
"german"="europe",
"greek"="europe",
"african"="africa",
"vietnamese"="eastasia",
"japanese"="eastasia",
"russian"="europe",
"serbian"="europe",
"portugal"="europe",
"sa"="americas",
"chinese"="eastasia",
"korean"="eastasia",
"polish"="europe"
)
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(i.singular_name,'%20',' '),'%27','') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin not in ('ancient');"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
write.csv(df[2:nrow(df),],"cuisines.csv",row.names = FALSE)
df[185,]
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(replace(i.singular_name,'%20',' '),'%27',''),'%E7','c') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin not in ('ancient');"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
write.csv(df[2:nrow(df),],"cuisines.csv",row.names = FALSE)
x <- df$ingredient_string %>% join()
x <- df$ingredient_string %>% paste0(.,collapse=" ")
x
for (i in 1:1000) print(i)
x <- df$ingredient_string %>%
paste0(.,collapse=" ") %>%
strsplit(" ") %>%
unique()
x
x <- df$ingredient_string %>%
paste0(.,collapse=" ") %>%
strsplit(" ") %>%
unlist() %>%
unique()
x
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(replace(i.singular_name,'%20',''),'%27',''),'%E7','c') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin not in ('ancient');"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
write.csv(df[2:nrow(df),],"cuisines.csv",row.names = FALSE)
x <- df$ingredient_string %>%
paste0(.,collapse=" ") %>%
strsplit(" ") %>%
unlist() %>%
unique()
x
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(replace(replace(i.singular_name,'%20',''),'%27',''),'%E7','c'),'+','') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin not in ('ancient');"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
write.csv(df[2:nrow(df),],"cuisines.csv",row.names = FALSE)
x <- df$ingredient_string %>%
paste0(.,collapse=" ") %>%
strsplit(" ") %>%
unlist() %>%
unique()
x
setwd("/Applications/MAMP/htdocs/raasipe/processors")
source("process.R")
cuisines_map <- c(
"spanish"="europe",
"american"="americas",
"me"="westasia",
"ancient"="ancient",
"french"="europe",
"indian"="westasia",
"mexican"="americas",
"english"="europe",
"italian"="europe",
"filipino"="eastasia",
"german"="europe",
"greek"="europe",
"african"="africa",
"vietnamese"="eastasia",
"japanese"="eastasia",
"russian"="europe",
"serbian"="europe",
"portugal"="europe",
"sa"="americas",
"chinese"="eastasia",
"korean"="eastasia",
"polish"="europe"
)
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(replace(replace(i.singular_name,'%20',''),'%27',''),'%E7','c'),'+','') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin not in ('ancient');"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
table(df$cuisine)
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(replace(replace(i.singular_name,'%20',''),'%27',''),'%E7','c'),'+','') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin not in ('ancient','africa');"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
write.csv(df[2:nrow(df),],"cuisines.csv",row.names = FALSE)
recipes <- execute_query(paste0(
" select ",
" replace(replace(r.name,'%20',' '),'%27','') recipe, ",
" r.origin cuisine, ",
" replace(replace(replace(replace(i.singular_name,'%20',''),'%27',''),'%E7','c'),'+','') ingredient ",
" from recipe r join step s on s.recipe_id = r.id ",
" join material m on m.step_id = s.id",
" join ingredient i on m.ingredient_id = i.id",
" where origin is not null and origin not in ('ancient','africa');"
))
df <- data.frame(cuisine=c(1),ingredient_string=c(1))
for (r in unique(recipes$recipe)) {
tmp_df <- subset(recipes,recipe==r)
#tmp_df$cuisine = cuisines_map[tmp_df$cuisine]
df <- rbind(df,c(tmp_df[1,"cuisine"],paste0(tmp_df$ingredient,collapse=" ")))
}
table(df$cuisine)
library(RMySQL)
library(magrittr)
library(dplyr)
user <- "raasipe_admin"
pass <- "V!2fsz9popf"
host <- "107.180.55.15"
port <- 3306
dbname <- "raasipe"
conn <- dbConnect(MySQL(),
user=user,
password=pass,
dbname=dbname,
host=host,
port=port)
on.exit(dbDisconnect(con))
rs <- dbSendQuery(conn, paste0(
"select r.id recipe_id, i.id ingredient_id from recipe r ",
" left join step s on s.recipe_id = r.id ",
" left join material m on m.step_id = s.id ",
" left join ingredient i on m.ingredient_id = i.id;"))
data <- fetch(rs,n=5000) %>%
arrange(as.numeric(recipe_id))
huh <- dbHasCompleted(rs)
dbClearResult(rs)
dbDisconnect(conn)
data$recipe_id <- as.numeric(data$recipe_id)
r_ids <- unique(data$recipe_id)
total <- data.frame(r_n = 1:length(r_ids))
for (j in 1:10) {
print(j/10)
r_ids <- r_ids[sample(length(r_ids))]
r_a <- c()
r_n <- c()
i_n <- c()
for (i in 1:length(r_ids)) {
r_a <- c(r_a,r_ids[i])
these_recipes <- subset(data,recipe_id %in% r_a)
r_n <- c(r_n,i)
i_n <- c(i_n,length(unique(these_recipes$ingredient_id)))
}
total[,j+1] <- i_n
#plot(r_n,i_n,type="l")
#lines(r_n)
#lines(16*(1:length(r_ids))^.5)
#lines(((1/1:1000)^.5)*38.5/2)
}
#lines(((1/1:1000)^.5)*38.5/2)
total$avg <- rowMeans(total[,-1],na.rm=TRUE)
total$avg <- total$avg - total$avg[1]
ideal <- 24.75*(0:length(r_ids))^.5
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
library(RMySQL)
library(magrittr)
library(dplyr)
user <- "raasipe_admin"
pass <- "u&z1IGvNgUe7"
host <- "107.180.55.15"
port <- 3306
dbname <- "raasipe"
conn <- dbConnect(MySQL(),
user=user,
password=pass,
dbname=dbname,
host=host,
port=port)
on.exit(dbDisconnect(con))
rs <- dbSendQuery(conn, paste0(
"select r.id recipe_id, i.id ingredient_id from recipe r ",
" left join step s on s.recipe_id = r.id ",
" left join material m on m.step_id = s.id ",
" left join ingredient i on m.ingredient_id = i.id;"))
data <- fetch(rs,n=5000) %>%
arrange(as.numeric(recipe_id))
huh <- dbHasCompleted(rs)
dbClearResult(rs)
dbDisconnect(conn)
data$recipe_id <- as.numeric(data$recipe_id)
r_ids <- unique(data$recipe_id)
total <- data.frame(r_n = 1:length(r_ids))
for (j in 1:10) {
print(j/10)
r_ids <- r_ids[sample(length(r_ids))]
r_a <- c()
r_n <- c()
i_n <- c()
for (i in 1:length(r_ids)) {
r_a <- c(r_a,r_ids[i])
these_recipes <- subset(data,recipe_id %in% r_a)
r_n <- c(r_n,i)
i_n <- c(i_n,length(unique(these_recipes$ingredient_id)))
}
total[,j+1] <- i_n
#plot(r_n,i_n,type="l")
#lines(r_n)
#lines(16*(1:length(r_ids))^.5)
#lines(((1/1:1000)^.5)*38.5/2)
}
#lines(((1/1:1000)^.5)*38.5/2)
total$avg <- rowMeans(total[,-1],na.rm=TRUE)
total$avg <- total$avg - total$avg[1]
ideal <- 24.75*(0:length(r_ids))^.5
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
library(RMySQL)
library(magrittr)
library(dplyr)
user <- "raasipe_admin"
pass <- "u&z1IGvNgUe7"
host <- "107.180.55.15"
port <- 3306
dbname <- "raasipe"
conn <- dbConnect(MySQL(),
user=user,
password=pass,
dbname=dbname,
host=host,
port=port)
on.exit(dbDisconnect(con))
rs <- dbSendQuery(conn, paste0(
"select r.id recipe_id, i.id ingredient_id from recipe r ",
" left join step s on s.recipe_id = r.id ",
" left join material m on m.step_id = s.id ",
" left join ingredient i on m.ingredient_id = i.id;"))
data <- fetch(rs,n=10000) %>%
arrange(as.numeric(recipe_id))
huh <- dbHasCompleted(rs)
dbClearResult(rs)
dbDisconnect(conn)
data$recipe_id <- as.numeric(data$recipe_id)
r_ids <- unique(data$recipe_id)
total <- data.frame(r_n = 1:length(r_ids))
for (j in 1:10) {
print(j/10)
r_ids <- r_ids[sample(length(r_ids))]
r_a <- c()
r_n <- c()
i_n <- c()
for (i in 1:length(r_ids)) {
r_a <- c(r_a,r_ids[i])
these_recipes <- subset(data,recipe_id %in% r_a)
r_n <- c(r_n,i)
i_n <- c(i_n,length(unique(these_recipes$ingredient_id)))
}
total[,j+1] <- i_n
#plot(r_n,i_n,type="l")
#lines(r_n)
#lines(16*(1:length(r_ids))^.5)
#lines(((1/1:1000)^.5)*38.5/2)
}
#lines(((1/1:1000)^.5)*38.5/2)
total$avg <- rowMeans(total[,-1],na.rm=TRUE)
total$avg <- total$avg - total$avg[1]
ideal <- 24.75*(0:length(r_ids))^.5
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
library(RMySQL)
library(magrittr)
library(dplyr)
user <- "raasipe_admin"
pass <- "u&z1IGvNgUe7"
host <- "107.180.55.15"
port <- 3306
dbname <- "raasipe"
conn <- dbConnect(MySQL(),
user=user,
password=pass,
dbname=dbname,
host=host,
port=port)
on.exit(dbDisconnect(con))
rs <- dbSendQuery(conn, paste0(
"select r.id recipe_id, i.id ingredient_id from recipe r ",
" left join step s on s.recipe_id = r.id ",
" left join material m on m.step_id = s.id ",
" left join ingredient i on m.ingredient_id = i.id;"))
data <- fetch(rs,n=20000) %>%
arrange(as.numeric(recipe_id))
huh <- dbHasCompleted(rs)
dbClearResult(rs)
dbDisconnect(conn)
data$recipe_id <- as.numeric(data$recipe_id)
r_ids <- unique(data$recipe_id)
total <- data.frame(r_n = 1:length(r_ids))
for (j in 1:10) {
print(j/10)
r_ids <- r_ids[sample(length(r_ids))]
r_a <- c()
r_n <- c()
i_n <- c()
for (i in 1:length(r_ids)) {
r_a <- c(r_a,r_ids[i])
these_recipes <- subset(data,recipe_id %in% r_a)
r_n <- c(r_n,i)
i_n <- c(i_n,length(unique(these_recipes$ingredient_id)))
}
total[,j+1] <- i_n
#plot(r_n,i_n,type="l")
#lines(r_n)
#lines(16*(1:length(r_ids))^.5)
#lines(((1/1:1000)^.5)*38.5/2)
}
#lines(((1/1:1000)^.5)*38.5/2)
total$avg <- rowMeans(total[,-1],na.rm=TRUE)
total$avg <- total$avg - total$avg[1]
ideal <- 24.75*(0:length(r_ids))^.55
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
ideal <- 24.75*(0:length(r_ids))^.51
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
ideal <- 24.75*(0:length(r_ids))^.505
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
ideal <- 25*(0:length(r_ids))^.5
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
ideal <- 26*(0:length(r_ids))^.5
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
ideal <- 27*(0:length(r_ids))^.5
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
ideal <- 26.5*(0:length(r_ids))^.5
plot(r_n,r_n,type="l")
lines(ideal,col="blue")
lines(total$avg,col="red")
